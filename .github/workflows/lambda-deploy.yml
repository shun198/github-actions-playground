name: lambda-deploy

on:
  push:
    branches:
      - main

env:
  REGION_NAME: ap-northeast-1
  FUNCTION_NAME: lambda-deploy-demo
  LAMBDA_WORKING_DIRECTORY: backend
  LAMBDA_PACKAGE_NAME: lambda
  LAMBDA_EXECUTION_ROLE: arn:aws:iam::044392971793:role/lambda-deploy-demo

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    defaults:
      run:
        working-directory: ${{ env.LAMBDA_WORKING_DIRECTORY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      # Poetryのインストール
      - name: Install poetry
        run: pipx install poetry
      # Python3.11を使用したいので設定
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      # OIDCを使ってAWSの認証設定を行う
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::044392971793:role/${{ env.FUNCTION_NAME }}
          role-session-name: samplerolesession
          aws-region: ${{ env.REGION_NAME }}
      # zipファイルを作成
      - name: Create Zip File
        run: |
          poetry install
          poetry export -f requirements.txt --without-hashes -o requirements.txt
          pip install --upgrade pip && pip install -r requirements.txt --target .
          rm pyproject.toml poetry.lock requirements.txt
          zip -r ${{ env.LAMBDA_PACKAGE_NAME }}.zip .
      # Lambdaが存在するか確認する
      - name: Check Function if Exists
        id: check-function
        continue-on-error: true
        run: |
          aws lambda get-function --function-name ${{ env.FUNCTION_NAME }}
      # Lambdaが存在しない場合は新規作成し、デプロイする
      - name: Create and Deploy Lambda Function
        if: steps.check-function.outcome == 'failure'
        run: |
          aws lambda create-function \
          --function-name ${{ env.FUNCTION_NAME }} \
          --runtime python3.11 \
          --handler lambda_handler \
          --zip-file fileb://${{ env.LAMBDA_PACKAGE_NAME }}.zip \
          --role arn:aws:iam::044392971793:role/${{ env.FUNCTION_NAME }}
      - name: Deploy Lambda Function
        if: steps.check-function.outcome == 'success'
        run: |
          aws lambda update-function-code \
          --function-name ${{ env.FUNCTION_NAME }} \
          --zip-file fileb://${{ env.LAMBDA_PACKAGE_NAME }}.zip
